// NovaStar-Controller
const tcp           = require('../../tcp');
const instance_skel = require('../../instance_skel');
var actions         = require('./actions');
let debug;
let log;

class instance extends instance_skel {

	constructor(system,id,config) {
		super(system,id,config)

		Object.assign(this, {...actions})

		this.actions()
	}

	actions(system) {
		this.setActions(this.getActions());
	}


	updateConfig(config) {
		this.config = config;
		this.init_tcp();
	}

	init() {
		debug = this.debug;
		log = this.log;

		this.init_tcp();
	}

	init_tcp() {
		if (this.socket !== undefined) {
			this.socket.destroy();
			delete this.socket;
		}

		if (this.config.port === undefined) {
			this.config.port = 5200;
		}

		if (this.config.host) {
			this.socket = new tcp(this.config.host, this.config.port);

			this.socket.on('status_change', (status, message) => {
				this.status(status, message);
			});

			this.socket.on('error', (err) => {
				debug('Network error', err);
				this.log('error','Network error: ' + err.message);
			});

			this.socket.on('connect', () => {
				let cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x02,0x00,0x57,0x56]);
				this.socket.send(cmd);
				debug('Connected');
			});

			// if we get any data, display it to stdout
			this.socket.on('data', (buffer) => {
				//var indata = buffer.toString('hex');
				//future feedback can be added here
				//console.log(indata);
				console.log('Buffer:', buffer);
			});

		}
	}

	// Return config fields for web config
	config_fields() {

		return [
			{
				type: 'text',
				id: 'info',
				width: 12,
				label: 'Information',
				value: 'This module will connect to a NovaStar MCTRL4K, VX4S, VX6S, or NovaProHD LED Processor.'
			},
			{
				type: 'textinput',
				id: 'host',
				label: 'IP Address',
				width: 6,
				default: '192.168.1.11',
				regex: this.REGEX_IP
			}
		]
	}

	// When module gets deleted
	destroy() {
		if (this.socket !== undefined) {
			this.socket.destroy();
		}

		debug('destroy', this.id);
	}

	action(action) {
		let cmd;
		let id = action.action
		let options = action.options;

		const lf = '\u000a';

		switch(id) {

			// Change Brightness
			case 'change_brightness':
				switch(options.brightness) {
					case '0':
						//3%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00    08   5D   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x08,0x5D,0x5A]);
						break;
					case '1':
						//5%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00    0D   62   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x0D,0x62,0x5A]);
						break;
					case '2':
						//8%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00    20   75   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x14,0x69,0x5A]);
						break;
					case '3':
						//10%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   1A   6F   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x1A,0x6F,0x5A]);
						break;
					case '4':
						//15%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   27   7C   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x27,0x7C,0x5A]);
						break;
					case '5':
						//20%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   33   88   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x33,0x88,0x5A]);
						break;
					case '6':
						//25%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   40   95   5a
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x40,0x95,0x5A]);
						break;
					case '7':
						//30%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   4D   A2   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x4D,0xA2,0x5A]);
						break;
					case '8':
						//35%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   5A   AF   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x5A,0xAF,0x5A]);
						break;
					case '9':
						//40%:               55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00  66   BB   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x66,0xBB,0x5A]);
						break;
					case '10':
						//45%:             55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00    73   C8   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x73,0xC8,0x5A]);
						break;
					case '11':
						//50%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   80   D5   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x80,0xD5,0x5A]);
						break;
					case '12':
						//55%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   8D   E2   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x8D,0xE2,0x5A]);
						break;
					case '13':
						//60%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   9A   EF   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0x9A,0xEF,0x5A]);
						break;
					case '14':
						//65%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   A6   FB   5A
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xA6,0xFB,0x5A]);
						break;
					case '15':
						//70%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   B3   08   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xB3,0x08,0x5B]);
						break;
					case '16':
						//75%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   C0   15   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xC0,0x15,0x5B]);
						break;
					case '17':
						//80%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   CD   22   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xCD,0x22,0x5B]);
						break;
					case '18':
						//85%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   DA   2F   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xDA,0x2F,0x5B]);
						break;
					case '19':
						//90%:              55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   E6   3B   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xE6,0x3B,0x5B]);
						break;
					case '20':
						//95%:               55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00  F3   48   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xF3,0x48,0x5B]);
						break;
					case '21':
						//100%:             55   AA   00   00   FE   FF   01   FF   FF   FF   01   00   01   00   00   02   01   00   FF   54   5B
						cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0xFF,0x01,0xFF,0xFF,0xFF,0x01,0x00,0x01,0x00,0x00,0x02,0x01,0x00,0xFF,0x54,0x5B]);
						break;
					}
				break;

		// Change Test Pattern
		case 'change_TP':
			switch(options.tp) {
					case '0':
						//Red               55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   02   DA   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x02,0xDA,0x58]);
						break;
					case '1':
					//Green             55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   04   DC   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x04,0xDC,0x58]);
						break;
					case '2':
						//Blue             55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   03   DB   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x03,0xDB,0x58]);
						break;
					case '3':
						//White             55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   05   DD   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x05,0xDD,0x58]);
						break;
					case '4':
						//Horizontal        55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   06   DE   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x06,0xDE,0x58]);
						break;
					case '5':
						//Vertical          55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   07   DF   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x07,0xDF,0x58]);
						break;
					case '6':
						//incline           55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   08   E0   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x08,0xE0,0x58]);
						break;
					case '7':
						//Gray Scale             55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   09   E1   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x09,0xE1,0x58]);
						break;
					case '8':
						//Aging             55   AA   00   80   FE   00   01   00   FF   FF   01   00   01   01   00   02   01   00   0A   E2   58
						cmd = new Buffer([0x55,0xAA,0x00,0x80,0xFE,0x00,0x01,0x00,0xFF,0xFF,0x01,0x00,0x01,0x01,0x00,0x02,0x01,0x00,0x0A,0xE2,0x58]);
						break;
					}
				break;

		// Change Display mode
		case 'change_display_mode':
			switch(options.display_mode) {
				case '0':
					//Normal            55   aa   00   00   fe   00   00   00   00   00   01   00   50   00   20   02   01   00   00   c7   56
					cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x50,0x00,0x20,0x02,0x01,0x00,0x00,0xC7,0x56]);
					break;
				case '1':
					//Freeze            55   aa   00   00   fe   00   00   00   00   00   01   00   50   00   20   02   01   00   01   c8   56
					cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x50,0x00,0x20,0x02,0x01,0x00,0x01,0xC8,0x56]);
					break;
				case '2':
					//Black             55   aa   00   00   fe   00   00   00   00   00   01   00   50   00   20   02   01   00   02   c9   56
					cmd = new Buffer([0x55,0xAA,0x00,0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x50,0x00,0x20,0x02,0x01,0x00,0x02,0xC9,0x56]);
					break;
				}
			break;

		// Change Inputs
		case 'change_inputs':
			switch(options.inputs) {
				case '0':
					//DVI               55   AA   00   3E   FE   FF   00   00   00   00   01   00   23   00   00   02   01   00   61   18  58
					cmd = new Buffer([0x55,0xAA,0x00,0x3E,0xFE,0xFF,0x00,0x00,0x00,0x00,0x01,0x00,0x23,0x00,0x00,0x02,0x01,0x00,0x61,0x18,0x58]);
					break;
				case '1':
					//HDMI               55   AA  00   8A   FE   FF   00   00   00   00   01   00   23   00   00   02   01   00   05   08   58
					cmd = new Buffer([0x55,0xAA,0x00,0x8A,0xFE,0xFF,0x00,0x00,0x00,0x00,0x01,0x00,0x23,0x00,0x00,0x02,0x01,0x00,0x05,0x08,0x58]);
					break;
				case '2':
					//DP                55   AA   00   9D   FE   FF   00   00   00   00   01   00   23   00   00   02   01   00   5F   75   58
					cmd = new Buffer([0x55,0xAA,0x00,0x9D,0xFE,0xFF,0x00,0x00,0x00,0x00,0x01,0x00,0x23,0x00,0x00,0x02,0x01,0x00,0x5F,0x75,0x58]);
					break;
				}
			break;
		}

		if (cmd !== undefined) {
			if (this.socket !== undefined && this.socket.connected) {
				this.socket.send(cmd);
			} else {
				debug('Socket not connected :(');
			}

		}
	}
}

exports = module.exports = instance;
